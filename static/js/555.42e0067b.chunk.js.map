{"version":3,"file":"static/js/555.42e0067b.chunk.js","mappings":"wQAEe,SAASA,EAAT,GAA6B,IAAPC,EAAM,EAANA,GACnC,OAAO,SAAC,KAAD,CAAMA,GAAIA,EAAV,oBACR,CCMc,SAASC,IAAgB,IAAD,IAE/BC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrCC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACUC,MAAM,sCAAD,OACCP,EADD,8CAGpCQ,MAAK,SAAAC,GACJ,OAAOA,EAAEC,MACV,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAAhB,IAPU,OAClBC,EADkB,OASxBX,EAAgBW,GATQ,2CAAH,qDAYvBT,GACD,GAAE,CAACN,IAEJ,IAAQgB,EACNb,EADMa,MAAOC,EACbd,EADac,aAAcC,EAC3Bf,EAD2Be,aAAcC,EACzChB,EADyCgB,SAAUC,EACnDjB,EADmDiB,OAAQC,EAC3DlB,EAD2DkB,YAEvDC,EAAYC,KAAKC,MAAqB,GAAfN,GAE7B,OACE,6BACE,SAACzB,EAAD,CAAYC,GAAIE,IACfO,IACC,iCACE,iBAAKsB,UAAU,kBAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,gBACEC,IAAG,yCAAoCL,GACvCM,IAAKX,OAGT,iBAAKS,UAAU,eAAf,WACE,0BACGT,EADH,sBACeC,QADf,IACeA,OADf,EACeA,EAAcW,UAAU,EAAG,GAD1C,SAGA,kDAAmBN,EAAnB,SACA,sCACA,uBAAIH,KACJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQS,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAGzB,mBACA,kDACA,2BACE,yBACE,SAAC,KAAD,CAAMrC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBACA,SAAC,EAAAsC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/GoBackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function GoBackLink({ to }) {\n  return <Link to={to}>Go back</Link>;\n}\n","import '../styles.css';\n\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport GoBackLink from 'components/GoBackLink';\n\nimport { Suspense } from 'react';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const fetchedMovieDetails = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=15d494776c3d35f24fb32811ec733217`\n      )\n        .then(r => {\n          return r.json();\n        })\n        .catch(error => console.log('error'));\n\n      setMovieDetails(fetchedMovieDetails);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const { title, release_date, vote_average, overview, genres, poster_path } =\n    movieDetails;\n  const userScore = Math.round(vote_average * 10);\n\n  return (\n    <main>\n      <GoBackLink to={backLinkHref} />\n      {movieDetails && (\n        <>\n          <div className=\"MovieDetailsBox\">\n            <div className=\"ImageMovieBox\">\n              <img\n                src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n                alt={title}\n              />\n            </div>\n            <div className=\"TextMovieBox\">\n              <h1>\n                {title} {`(${release_date?.substring(0, 4)})`}\n              </h1>\n              <p>User score: {`${userScore}%`}</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>{genres?.map(genre => `${genre.name} `)}</p>\n            </div>\n          </div>\n          <hr />\n          <p>Additional informaton</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <hr />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n}\n"],"names":["GoBackLink","to","MovieDetails","backLinkHref","useLocation","state","from","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","fetch","then","r","json","catch","error","console","log","fetchedMovieDetails","title","release_date","vote_average","overview","genres","poster_path","userScore","Math","round","className","src","alt","substring","map","genre","name","Suspense","fallback"],"sourceRoot":""}